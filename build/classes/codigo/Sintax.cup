package codigo;

import java_cup.runtime.Symbol;

parser code
{:
    private Symbol s;
    
    public void syntax_error(Symbol s){
        this.s = s;
    }

    public Symbol getS(){
        return this.s;
}
:};


terminal
    Linea                         ,
    Comillas                      , 
    Igual                         , 
    Suma                          , 
    Resta                         , 
    Multiplicacion                , 
    Division                      , 
    Parentesis_a                  ,
    Parentesis_c                  ,  
    Llave_a                       , 
    Llave_c                       , 
    Corchete_a                    , 
    Corchete_c                    , 
    P_coma                        , 
    Identificador                 , 
    Numero                        , 
    ERROR                         , 
    Inicio_App                    , 
    Text                          , 
    Ent                           ,
    asignacion                    , 
    punto                         , 
    Real                          , 
    Bool                          , 
    operadorBooleano              ,            
    operadorIncrementoDecremento  , 
    operadorLogico                ,
    Car                           ,
    operadorRelacional            , 
    Tarea                         , 
    Y_si                          , 
    Mientras                      , 
    Imprime                       ,
  
    Gira_izq                      ,
    Gira_der                      ,   
    Avanza                        ,     
    Retroceder                    ,
    Detener                       ,
    Aviso                         ,
    Advertencia                   ,
    VerificarBateria    
;
non terminal 
        INICIO, 
        SENTENCIA, 
        DECLARACION, 
        IF, 
        SENTENCIA_BOOLEANA, 
        TAREA, 
        MIENTRAS, 
        IMPRIME,

        SENTENCIA_GIRA_IZQ,
        SENTENCIA_GIRA_DER,
        SENTENCIA_AVANZA,
        SENTENCIA_RETROCEDE,
        SENTENCIA_DETENER,
        SENTENCIA_AVISO,
        SENTENCIA_ADVERTENCIA,
        SENTENCIA_VERIFICA_BATERIA           
;



start with INICIO;



INICIO ::= 
    Inicio_App Identificador Llave_a Llave_c 
    |
    Inicio_App Identificador Llave_a SENTENCIA Llave_c
;


SENTENCIA ::= 
    SENTENCIA DECLARACION 
    |
    DECLARACION 
    |
    SENTENCIA IF 
    | 
    IF 
    |      
    SENTENCIA TAREA
    |
    TAREA
    |
    SENTENCIA MIENTRAS
    |
    MIENTRAS
    |
    SENTENCIA IMPRIME
    |
    IMPRIME
    |
    SENTENCIA SENTENCIA_GIRA_IZQ 
    |
    SENTENCIA_GIRA_IZQ 
    |   
    SENTENCIA SENTENCIA_GIRA_DER
    |   
    SENTENCIA_GIRA_DER
    |
    SENTENCIA SENTENCIA_AVANZA
    |
    SENTENCIA_AVANZA
    |
    SENTENCIA SENTENCIA_RETROCEDE
    |
    SENTENCIA_RETROCEDE
    |
    SENTENCIA SENTENCIA_DETENER
    |
    SENTENCIA_DETENER
    |
    SENTENCIA SENTENCIA_AVISO
    |
    SENTENCIA_AVISO
    |
    SENTENCIA SENTENCIA_ADVERTENCIA
    |
    SENTENCIA_ADVERTENCIA
    |
    SENTENCIA SENTENCIA_VERIFICA_BATERIA
    |
    SENTENCIA_VERIFICA_BATERIA

;


DECLARACION ::= 
    Text Identificador P_coma
    |
    Text Identificador asignacion Comillas Comillas P_coma
    |
    Text Identificador asignacion Comillas Identificador Comillas P_coma

    |

    Ent Identificador P_coma
    |
    Ent Identificador asignacion Numero P_coma
    |
    Ent Identificador operadorIncrementoDecremento P_coma

    |

    Real Identificador asignacion Numero punto Numero P_coma
    |
    Real Identificador P_coma

    |

    Bool Identificador P_coma
    |
    Bool Identificador asignacion operadorBooleano P_coma        

    |

    Car Identificador P_coma
    |
    Car Identificador asignacion Comillas Identificador Comillas P_coma
    |
    Car Identificador asignacion Comillas Comillas P_coma
;


IF ::=
    Y_si Parentesis_a SENTENCIA_BOOLEANA Parentesis_c Llave_a SENTENCIA Llave_c
;


MIENTRAS ::=
	Mientras Parentesis_a SENTENCIA_BOOLEANA Parentesis_c Llave_a SENTENCIA Llave_c
;	


TAREA::=
    Tarea Identificador Parentesis_a Parentesis_c Llave_a SENTENCIA Llave_c
;

SENTENCIA_BOOLEANA ::= 
    	operadorBooleano
	|
	Identificador operadorLogico
	|
	Identificador operadorRelacional Numero	
	|
	Identificador operadorRelacional Identificador
        |
        Numero operadorRelacional Identificador              
;


IMPRIME ::=
    Imprime Parentesis_a Parentesis_c P_coma
    |
    Imprime Parentesis_a Comillas Identificador Comillas Parentesis_c P_coma
;


SENTENCIA_GIRA_IZQ ::=
    Gira_izq Parentesis_a Numero Parentesis_c P_coma
;


SENTENCIA_GIRA_DER ::=
    Gira_der Parentesis_a Numero Parentesis_c P_coma
;


SENTENCIA_AVANZA ::=
    Avanza Parentesis_a Numero Parentesis_c P_coma
;


SENTENCIA_RETROCEDE ::=
    Retroceder Parentesis_a Numero Parentesis_c P_coma
;


SENTENCIA_DETENER ::=
    Detener Parentesis_a Parentesis_c P_coma
;


SENTENCIA_AVISO ::=
    Aviso Parentesis_a Comillas Identificador Comillas Parentesis_c P_coma
;


SENTENCIA_ADVERTENCIA ::=
    Advertencia Parentesis_a Comillas Identificador Comillas Parentesis_c P_coma
;


SENTENCIA_VERIFICA_BATERIA ::=
    VerificarBateria Parentesis_a Parentesis_c P_coma
;